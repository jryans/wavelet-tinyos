digraph "TransceiverC_if" {
    rankdir=LR;
    ratio=compress;
    margin="0,0";
    ranksep=0.0005; 
    nodesep=0.1; 
    node [shape=ellipse style=filled fillcolor="#e0e0e0"];
    node [fontsize=10 height=.1 width=.1];
    edge [fontsize=9 arrowsize=.8];
    node [fontcolor=blue];
    edge [fontcolor=blue];

    TransceiverC [URL="tos.lib.Transceiver.TransceiverC.nc.html"];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    TransceiverC -> TransceiverM [ style=dashed label="Transceiver" URL="tos.lib.Transceiver.Transceiver.nc.html" ];
    TransceiverC [URL="tos.lib.Transceiver.TransceiverC.nc.html"];
    PacketM [URL="tos.lib.Transceiver.PacketM.nc.html"];
    TransceiverC -> PacketM [ style=dashed label="Packet" URL="tos.lib.Transceiver.Packet.nc.html" ];
    TransceiverC [URL="tos.lib.Transceiver.TransceiverC.nc.html"];
    UARTFramedPacket [URL="tos.system.UARTFramedPacket.nc.html"];
    TransceiverC -> UARTFramedPacket [ style=dashed label="StdControl" URL="tos.interfaces.StdControl.nc.html" ];
    TransceiverC [URL="tos.lib.Transceiver.TransceiverC.nc.html"];
    RadioCRCPacket [URL="tos.lib.CC2420Radio.RadioCRCPacket.nc.html"];
    TransceiverC -> RadioCRCPacket [ style=dashed label="StdControl" URL="tos.interfaces.StdControl.nc.html" ];
    TransceiverC [URL="tos.lib.Transceiver.TransceiverC.nc.html"];
    StateC [URL="tos.lib.State.StateC.nc.html"];
    TransceiverC -> StateC [ style=dashed label="StdControl" URL="tos.interfaces.StdControl.nc.html" ];
    TransceiverC [URL="tos.lib.Transceiver.TransceiverC.nc.html"];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    TransceiverC -> TransceiverM [ style=dashed label="StdControl" URL="tos.interfaces.StdControl.nc.html" ];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    StateC [URL="tos.lib.State.StateC.nc.html"];
    TransceiverM -> StateC [ label="State" URL="tos.lib.State.State.nc.html" ];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    StateC [URL="tos.lib.State.StateC.nc.html"];
    TransceiverM -> StateC [ label="State" URL="tos.lib.State.State.nc.html" ];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    PacketFilterM [URL="tos.lib.Transceiver.PacketFilterM.nc.html"];
    TransceiverM -> PacketFilterM [ label="PacketFilter" URL="tos.lib.Transceiver.PacketFilter.nc.html" ];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    RadioCRCPacket [URL="tos.lib.CC2420Radio.RadioCRCPacket.nc.html"];
    TransceiverM -> RadioCRCPacket [ label="ReceiveMsg" URL="tos.interfaces.ReceiveMsg.nc.html" ];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    UARTFramedPacket [URL="tos.system.UARTFramedPacket.nc.html"];
    TransceiverM -> UARTFramedPacket [ label="ReceiveMsg" URL="tos.interfaces.ReceiveMsg.nc.html" ];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    RadioCRCPacket [URL="tos.lib.CC2420Radio.RadioCRCPacket.nc.html"];
    TransceiverM -> RadioCRCPacket [ label="BareSendMsg" URL="tos.interfaces.BareSendMsg.nc.html" ];
    TransceiverM [URL="tos.lib.Transceiver.TransceiverM.nc.html"];
    UARTFramedPacket [URL="tos.system.UARTFramedPacket.nc.html"];
    TransceiverM -> UARTFramedPacket [ label="BareSendMsg" URL="tos.interfaces.BareSendMsg.nc.html" ];
}
